apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kafdrop
      app.kubernetes.io/component: kafdrop
      app.kubernetes.io/instance: kafdrop
      app.kubernetes.io/name: kafdrop
      app.kubernetes.io/part-of: kafka
      app.openshift.io/runtime-version: latest
    name: kafdrop
    namespace: debezium
  spec:
    ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: kafdrop
      deployment: kafdrop
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/route-disabled: "false"
      deployment.kubernetes.io/revision: "3"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"kafdrop:latest","namespace":"debezium"},"fieldPath":"spec.template.spec.containers[?(@.name==\"kafdrop\")].image","pause":"false"}]'
    labels:
      app: kafdrop
      app.kubernetes.io/component: kafdrop
      app.kubernetes.io/instance: kafdrop
      app.kubernetes.io/name: kafdrop
      app.kubernetes.io/part-of: kafka
      app.openshift.io/runtime-namespace: debezium
    name: kafdrop
    namespace: debezium
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kafdrop
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: kafdrop
          deployment: kafdrop
      spec:
        containers:
        - env:
          - name: KAFKA_BROKERCONNECT
            value: dbz-cluster-kafka-bootstrap:9092
          image: image-registry.openshift-image-registry.svc:5000/debezium/kafdrop@sha256:5337c9e0e2dee204bdde53e90cf97001f44fb9e8c3380340436efa844901a3f4
          imagePullPolicy: Always
          name: kafdrop
          ports:
          - containerPort: 9000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: kafdrop
      app.kubernetes.io/component: kafdrop
      app.kubernetes.io/instance: kafdrop
      app.kubernetes.io/name: kafdrop
      app.kubernetes.io/part-of: kafka
    name: kafdrop
    namespace: debezium
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: obsidiandynamics/kafdrop
      from:
        kind: DockerImage
        name: obsidiandynamics/kafdrop
      importPolicy:
        importMode: Legacy
      name: latest
      referencePolicy:
        type: Local
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: kafdrop
      app.kubernetes.io/component: kafdrop
      app.kubernetes.io/instance: kafdrop
      app.kubernetes.io/name: kafdrop
      app.kubernetes.io/part-of: kafka
      app.openshift.io/runtime-version: latest
    name: kafdrop
    namespace: debezium
  spec:
    port:
      targetPort: 9000-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: kafdrop
      weight: 100
    wildcardPolicy: None
